pipeline {
    agent any
    
    environment {
        GIT_REPO_URL = 'https://github.com/anirudhpratapsingh/jenkins-demo.git'
        WEB_SERVER_HOST = '10.0.2.172'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    def gitResult = git branch: 'main', credentialsId: '3c32a489-c641-428c-8162-bc463f5fb0f4', url: env.GIT_REPO_URL, returnStatus: true
                    def gitExitCode = gitResult.GIT_BRANCH ? 0 : 1
                    echo "Git checkout exit code: ${gitExitCode}"

                    if (gitExitCode != 0) {
                        error('Git checkout failed')
                    }
                }
            }
        }

        stage('Build') {
            steps {
                sh 'composer install'
            }
        }

        stage('Test') {
            steps {
                sh 'vendor/bin/phpunit --debug'
            }
        }

        stage('Deploy to EC2') {
            steps {
                withCredentials([
                    sshUserPrivateKey(credentialsId: 'webserver', keyFileVariable: 'SSH_KEY_FILE', usernameVariable: 'SSH_USERNAME')
                ]) {
                    script {
                        // Define variables
                        def buildArtifactsPath = '/var/lib/jenkins/workspace/pipelineone/src/*'

                        // Remove existing files on the web server
                        sh "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ${SSH_KEY_FILE} ${SSH_USERNAME}@${env.WEB_SERVER_HOST} 'rm -rf /var/www/deploy/*'"

                        sh "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ${SSH_KEY_FILE} ${SSH_USERNAME}@${env.WEB_SERVER_HOST} 'sudo mkdir -p /var/www/deploy/'"

                        // Copy files from Jenkins to web server
                        sh "sudo scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ${SSH_KEY_FILE} -r ${buildArtifactsPath} ${SSH_USERNAME}@${env.WEB_SERVER_HOST}:/var/www/deploy/"
                    }
                }
            }
        }
    }
}
